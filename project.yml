title: "FrontPage: An Prodigy project to make a personal front-page."
description: "Using Prodigy, spaCy, and friends ... this project allows you to make your own frontpage of the internet."

# Variables can be referenced across the project.yml using ${vars.var_name}
vars:
  annot_stream: "raw/content.jsonl"
  model: "en_core_web_sm"

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["scripts", "assets", "data", "training", "raw"]

# Assets that should be downloaded or available in the directory. You can replace
# this with your own input data.
assets:
  - dest: ""
    description: ""

# Project commands, specified in a style similar to CI config files (e.g. Azure
# pipelines). The name is the command name that lets you trigger the command
# via "spacy project run [command] [path]". The help message is optional and
# shown when executing "spacy project run [optional command] [path] --help".
commands:
  - name: "download"
    help: "Download data from sources."
    script:
      - python scripts/download_reddit.py --subreddit python --tag python
      - python scripts/download_reddit.py --subreddit MachineLearning --tag ml
      - python scripts/download_reddit.py --subreddit deeplearning --tag ml
      - python scripts/download_reddit.py --subreddit LanguageTechnology --tag ml
      - python scripts/download_arxiv.py --query 'ti:dataset OR ti:corpus OR ti:database OR abs:"a new dataset"' --tag dataset
      - python scripts/download_hackernews.py
    deps:
      - scripts/download_reddit.py
      - scripts/download_arxiv.py
      - scripts/download_hackernews.py
  - name: "preprocess"
    help: "Process data into Prodigy format."
    script:
      - python scripts/preprocess.py assets/ ${vars.annot_stream}
    deps:
      - assets
    outputs:
      - ${vars.annot_stream}
  - name: "annotate"
    help: "Annotate prodigy with custom recipe."
    script:
      - "prodigy textcat_topic dataset_papers ${vars.annot_stream} en_core_web_sm patterns/dataset.jsonl dataset,arxiv dataset -F recipes/textcat_topic.py"
    deps:
      - ${vars.annot_stream}
  - name: "db_out"
    help: "Export Prodigy annotations to a jsonl file."
    script:
      - "prodigy db_out dataset_papers data/"
  - name: "data_to_spacy"
    help: "Export Prodigy annotations to spacy format."
    script:
      - "prodigy data-to-spacy data/dataset/ --textcat-multilabel dataset_papers --eval-split 0.2"
  - name: "spacy_train"
    help: "Train a spaCy textcat model with Prodigy annotations."
    script:
      - "python -m spacy train data/dataset/config.cfg --output training/dataset/ --paths.train data/dataset/train.spacy --paths.dev data/dataset/dev.spacy"
    deps:
      - "data/dataset/train.spacy"
      - "data/dataset/dev.spacy"
      - "data/dataset/config.cfg"
  - name: "prodigy_train"
    help: "Train a textcat model with Prodigy annotations."
    script:
      - "python -m prodigy train --textcat-multilabel dataset_papers textcat_topic"
  - name: "build"
    help: "Builds your frontpage."
    script:
      - "python scripts/build_frontpage.py raw/content.jsonl > index.html"
  - name: "evaluate"
    help: "evaluate a spaCy model and/or a matcher"
    script:
      - "python scripts/evaluate.py dataset_papers patterns/dataset.jsonl training/dataset/"
    
workflows:
  fetch:
    - download
    - preprocess
  train:
    - data_to_spacy
    - spacy_train
